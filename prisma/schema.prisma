// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(cuid())
  userId String
  name String
  sku String? @unique
  price Decimal @db.Decimal(12,2)
  quantity Int @default(0)
  lowStockAt Int?
  hsnCode String?
  gstRate Decimal @db.Decimal(5,2) @default(18)
  category String?

  // Relationships
  invoiceItems InvoiceLineItem[]
  pricingRules PricingRule[]

  // Soft-delete
  deleted Boolean @default(false)
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId,name])
  @@index([createdAt])
  @@index([hsnCode])
}

model Customer {
  id String @id @default(cuid())
  userId String
  name String
  email String?
  phone String?
  address String?
  gstin String?
  creditLimit Decimal @db.Decimal(15,2) @default(0)
  creditUsed Decimal @db.Decimal(15,2) @default(0)
  groupType String @default("Regular") // "Regular", "VIP", "Wholesale"
  loyaltyPoints Int @default(0)
  
  // Relationships
  invoices Invoice[]
  payments Payment[]
  loyaltyHistory LoyaltyTransaction[]
  pricingRules PricingRule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([email])
  @@index([groupType])
}

model Invoice {
  id String @id @default(cuid())
  userId String
  invoiceNumber String @unique
  customerId String
  customer Customer @relation(fields: [customerId], references: [id])
  
  invoiceDate DateTime
  dueDate DateTime?
  
  // Amounts
  subtotal Decimal @db.Decimal(15,2)
  cgst Decimal @db.Decimal(15,2) @default(0)
  sgst Decimal @db.Decimal(15,2) @default(0)
  igst Decimal @db.Decimal(15,2) @default(0)
  tds Decimal @db.Decimal(15,2) @default(0)
  tcs Decimal @db.Decimal(15,2) @default(0)
  total Decimal @db.Decimal(15,2)
  
  // Payment Status
  status String @default("Draft") // "Draft", "Issued", "Partial", "Paid", "Cancelled"
  amountPaid Decimal @db.Decimal(15,2) @default(0)
  amountDue Decimal @db.Decimal(15,2)
  
  // Delivery details
  deliveryAddress String?
  notes String?
  
  // Related documents
  ewayBillNumber String?
  challanNumber String?
  
  // Line items
  lineItems InvoiceLineItem[]
  payments Payment[]
  profitMargin Decimal @db.Decimal(15,2) @default(0)
  profitPercent Decimal @db.Decimal(5,2) @default(0)
  
  // Recurring invoice
  isRecurring Boolean @default(false)
  recurringFrequency String? // "Weekly", "Monthly", "Quarterly", "Yearly"
  recurringEndDate DateTime?
  parentInvoiceId String?
  childInvoices Invoice[] @relation("RecurringInvoices")
  parentInvoice Invoice? @relation("RecurringInvoices", fields: [parentInvoiceId], references: [id])

  deleted Boolean @default(false)
  deletedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([customerId])
  @@index([invoiceNumber])
  @@index([status])
  @@index([invoiceDate])
}

model InvoiceLineItem {
  id String @id @default(cuid())
  invoiceId String
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  productId String
  product Product @relation(fields: [productId], references: [id])
  
  quantity Int
  unitPrice Decimal @db.Decimal(12,2)
  discount Decimal @db.Decimal(15,2) @default(0)
  discountPercent Decimal @db.Decimal(5,2) @default(0)
  taxableAmount Decimal @db.Decimal(15,2)
  gstRate Decimal @db.Decimal(5,2)
  sgst Decimal @db.Decimal(15,2) @default(0)
  cgst Decimal @db.Decimal(15,2) @default(0)
  igst Decimal @db.Decimal(15,2) @default(0)
  lineTotal Decimal @db.Decimal(15,2)
  
  // Cost tracking for profit margin
  costPrice Decimal @db.Decimal(12,2)
  profit Decimal @db.Decimal(15,2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([invoiceId])
  @@index([productId])
}

model Payment {
  id String @id @default(cuid())
  invoiceId String
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  customerId String
  customer Customer @relation(fields: [customerId], references: [id])
  
  amount Decimal @db.Decimal(15,2)
  paymentMethod String // "Cash", "Check", "UPI", "Bank Transfer", "Credit Card"
  transactionId String?
  notes String?
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([invoiceId])
  @@index([customerId])
  @@index([createdAt])
}

model PricingRule {
  id String @id @default(cuid())
  userId String
  
  customerId String?
  customer Customer? @relation(fields: [customerId], references: [id], onDelete: Cascade)
  
  productId String?
  product Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  customerGroup String? // "VIP", "Wholesale", "Regular" - if customerId is null, applies to group
  
  priceType String // "Fixed", "Percentage"
  priceValue Decimal @db.Decimal(12,2)
  
  minQuantity Int @default(1)
  maxQuantity Int?
  
  startDate DateTime
  endDate DateTime?
  
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([customerId])
  @@index([productId])
  @@index([customerGroup])
  @@index([startDate])
}

model LoyaltyTransaction {
  id String @id @default(cuid())
  customerId String
  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  
  points Int
  type String // "Earned", "Redeemed", "Expired"
  invoiceId String?
  description String?
  
  expiryDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([customerId])
  @@index([type])
}

model TaxRule {
  id String @id @default(cuid())
  userId String
  
  stateName String
  hsnCode String
  gstRate Decimal @db.Decimal(5,2)
  tdsApplicable Boolean @default(false)
  tdsRate Decimal @db.Decimal(5,2) @default(0)
  tcsApplicable Boolean @default(false)
  tcsRate Decimal @db.Decimal(5,2) @default(0)
  
  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([stateName])
  @@index([hsnCode])
}

model DeliveryChallan {
  id String @id @default(cuid())
  userId String
  challanNumber String @unique
  invoiceId String
  
  deliveryDate DateTime
  deliveryAddress String
  recipientName String?
  recipientPhone String?
  notes String?
  
  status String @default("Pending") // "Pending", "In Transit", "Delivered"
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([invoiceId])
  @@index([challanNumber])
}
